name: Build on Push to Build Branch

on:
  push:
    branches:
      - master
    # Skip builds for documentation-only changes
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - 'LICENSE'
  # Allow manual triggering with option to skip build
  workflow_dispatch:
    inputs:
      skip_build:
        description: 'Skip the build step'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'

jobs:
  test-file-operations:
    runs-on: ubuntu-latest
    # Same skip conditions as the build job
    if: |
      !contains(github.event.head_commit.message, '[skip ci]') && 
      !contains(github.event.head_commit.message, '[ci skip]') && 
      !contains(github.event.head_commit.message, '[skip build]') &&
      !contains(github.event.head_commit.message, 'nobuild') &&
      (github.event_name != 'workflow_dispatch' || github.event.inputs.skip_build != 'true')
    permissions:
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Run file operations tests
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          load: true
          tags: comfyui-file-test:${{ github.sha }}
          target: file-operations-test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build:
    runs-on: ubuntu-latest
    needs: test-file-operations
    # Skip build if:
    # 1. Commit message contains [skip ci] or [ci skip]
    # 2. Manual dispatch with skip_build = true
    # 3. Commit message contains [skip build] or nobuild
    if: |
      !contains(github.event.head_commit.message, '[skip ci]') && 
      !contains(github.event.head_commit.message, '[ci skip]') && 
      !contains(github.event.head_commit.message, '[skip build]') &&
      !contains(github.event.head_commit.message, 'nobuild') &&
      (github.event_name != 'workflow_dispatch' || github.event.inputs.skip_build != 'true')
    # Permissions to use OIDC token authentication
    permissions:
      contents: read
      id-token: write
      # Allows pushing to the GitHub Container Registry
      packages: write

    steps:
      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Temporarily disabled Depot - using GitHub's buildx instead
      # - name: Set up Depot
      #   uses: depot/setup-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          # project: 0bk90tk3kr  # Depot project ID - disabled
          context: .
          push: true
          tags: |
            fajyz/ois-gold-runpod-worker-comfy:${{ github.sha }}
            fajyz/ois-gold-runpod-worker-comfy:latest
          platforms: linux/amd64
          target: final
          build-args: |
            HUGGINGFACE_ACCESS_TOKEN=${{ secrets.HUGGINGFACE_ACCESS_TOKEN }}
            GH_ACCESS_TOKEN=${{ secrets.GH_ACCESS_TOKEN }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
